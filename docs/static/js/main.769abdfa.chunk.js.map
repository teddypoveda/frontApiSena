{"version":3,"sources":["hooks/useForm.js","helpers/fetch.js","types/types.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Dates.js","components/ui/LoginBotton.js","actions/ui.js","components/ui/AddNewResource.js","actions/events.js","components/country/CountryItem.js","components/modal/ResourceModalCountry.js","components/country/CountryScreen.js","components/dashboard/Dashboard.js","components/hotel/HotelItem.js","components/modal/ResourceModalHotel.js","components/hotel/HotelScreen.js","routers/PublicRoute.js","components/user/RegisterScreen.js","routers/PrivateRoute.js","routers/AppRouters.js","reducers/uiReducer.js","reducers/countryReducer.js","reducers/authReducer.js","reducers/hotelReducer.js","reducers/rootReducer.js","store/store.js","DashboardApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","error","console","log","fetchConToken","token","localStorage","getItem","types","uiOpenModalHotel","uiOpenModalHotelId","uiOpenModalCountry","uiOpenModalCountryId","uiModalDelete","uiModalDeleteClose","uiCloseModal","eventClearActiveEvent","eventUpdatedHotel","eventUpdatedCountry","eventDeletedHotel","eventDeletedCountry","eventHotelGet","eventCountryGet","eventAddHotel","eventAddCountry","authCheckingFinish","authStartLogin","authLogin","authStartRegister","authStartStartTokenRenew","authLogout","startLogin","email","password","dispatch","a","resp","json","ok","setItem","response","bodies","login","firstName","lastName","rol","Swal","fire","user","type","payload","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","handleLogin","e","preventDefault","className","onSubmit","placeholder","onChange","Dates","Badge","pill","bg","Nav","Link","href","Button","onClick","clear","window","location","LoginBotton","Navbar","Brand","variant","uiOpenModalDelete","id","idDelete","uiCloseModalDelete","AddNewResource","tipo","handleClickNew","eventAddNewHotel","event","eventPostHotel","closeModal","eventAddNewCountry","eventPostCountry","eventUpdateHotel","eventUpdateCountry","closeModalDelete","CountryItem","props","Update","guid","countryUpdate","Spinner","animation","role","Card","text","style","width","height","Body","Title","Subtitle","shortName","Stack","gap","size","ResourceModalCountry","useSelector","state","ui","modalOpenCountry","countrySelector","modalNew","modalDelete","idSelector","countries","country","FormValues","setFormValues","useEffect","handleChange","countryDelete","eventDeleteCountry","handleSubmitForm","isOpen","centered","onRequestClose","display","htmlFor","readOnly","CountryScreen","map","hot","Dashboard","HotelItem","hotelUpdate","address","Text","rating","OverlayTrigger","placement","overlay","Tooltip","ref","triggerHandler","Image","roundedCircle","src","ResourceModalHotel","modalOpenHotel","hotelSelector","hotels","hotel","formValues","countryId","hotelDelete","HotelScreen","PublicRoute","isAuthenticated","Component","component","rest","to","RegisterScreen","history","formRegisterValues","rolle","roles","msg","startRegister","required","class","defaultValue","PrivateRoute","AppRouters","checking","auth","isExpired","useJwt","Container","alt","path","exact","render","activeEvent","rootReducer","combineReducers","action","hola","eventClearModal","filter","datos","eventLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","DashboardApp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.769abdfa.chunk.js","sourcesContent":["import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    try {\n        const url = `${ baseUrl }/${ endpoint }`;\n\n        if ( method === 'GET' ) {\n            return fetch( url );\n        } else {\n            return fetch( url, {\n                method: method,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify( data )\n            });\n        }\n    } catch (error) {\n        console.log(error);   \n    }\n}\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    try {\n        const url = `${ baseUrl }/${ endpoint }`;\n        const token = localStorage.getItem('token') || '';\n        \n        if ( method === 'GET' ) {\n            return fetch( url, {\n                method,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-type': 'application/json',\n                    'Authorization': 'Bearer '+ token\n                }\n            });\n        } else {\n            return fetch( url, {\n                method,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-type': 'application/json',\n                    'Authorization': 'Bearer '+ token\n                },\n                body: JSON.stringify( data )\n            });\n        }\n        \n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","\nexport const types = {\n\n    uiOpenModalHotel: '[ui] Open modal Hotel',\n    uiOpenModalHotelId: '[ui] Open modal Hotel id',\n    uiOpenModalCountry: '[ui] Open modal Country',\n    uiOpenModalCountryId: '[ui] Open modal Country id',\n    uiModalDelete:'[ui] Open modal delete',\n    uiModalDeleteClose: '[ui] Close modal delete ',\n    uiCloseModal: '[ui] Close modal',\n\n\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdatedHotel: '[event Hotel] Event updated',\n    eventUpdatedCountry: '[event Country] Event updated',\n    eventDeletedHotel: '[event Hotel] Event deleted',\n    eventDeletedCountry: '[event Country] Event deleted',\n    eventHotelGet: '[event Hotel] event Loaded',\n    eventCountryGet: '[event Country] event Loaded',\n    eventAddHotel:'[event hotel] event Add new',\n    eventAddCountry:'[event country] event Add new',\n\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n}","import { fetchSinToken, fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport Swal from 'sweetalert2';\n\n\n\nexport const startLogin = ( email, password ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'account/login', { email, password }, 'POST' );\n        const body = await resp.json();\n\n        \n        if( resp.ok) {\n            localStorage.setItem('token', body.token );\n            const response = await fetchConToken( 'account/tokenValid', {}, 'GET' );\n            const bodies = await response.json();\n            console.log(bodies);\n            if(response.ok){\n                dispatch( login({\n                    firstName: bodies.firstName,\n                    lastName: bodies.lastName,\n                    rol: bodies.rol\n                }) );\n                localStorage.setItem('firstName',bodies.firstName);\n                localStorage.setItem('lastName',bodies.lastName);\n                localStorage.setItem('rol',bodies.rol);\n                localStorage.setItem('checking',true);\n\n                Swal.fire('Ingreso Exitoso!', 'Bienvenido al sisstema de hoteles!', 'success');\n            }\n        }else{\n            Swal.fire('Error', 'Email o Contraseña invalida', 'error');\n        }\n        \n\n    }\n}\n\nexport const startRegister = (  email, firstName, lastName, rol, password ) => {\n    return async(dispatch) => {\n        (!rol==='')||(rol='Administrator');\n        //console.log(rol);\n        try {\n            const roles=[rol];\n            const resp = await fetchSinToken( 'account/register', { email, firstName, lastName,roles, password}, 'POST' );\n            \n            if( resp.ok ) {\n                Swal.fire('Registro Exitoso!', 'Ahora puedes ingresar al sisstema!', 'success');\n            } else {\n                Swal.fire('Error', resp.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n\n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n\n        localStorage.setItem('tokenExpired',false);\n\n    \n       \n\n        // if( body.ok ) {\n        //     // localStorage.setItem('token', body.token );\n        //     // localStorage.setItem('token-init-date', new Date().getTime() );\n\n        //     // dispatch( login({\n        //     //     uid: body.uid,\n        //     //     name: body.name\n        //     // }) )\n        // } else {\n        //     //dispatch( checkingFinish() );\n        // }\n    }\n}\n\n//const checkingFinish = () => ({ type: types.authCheckingFinish });\n\n\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\n\nexport const startLogout = () => {\n    return (  ) => {\n\n        localStorage.clear();\n        localStorage.setItem('tokenExpired', true);\n        window.location.href = window.location.href;\n\n    }\n}\n\n//const logout = () => ({ type: types.authLogout })","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startLogin } from '../../actions/auth';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: '',\r\n        lPassword: 'Contraseñ4.'\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const handleLogin = async( e ) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin( lEmail, lPassword ) );        \r\n    }\r\n    \r\n\r\n    \r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\" mx-auto w-50 bg-light border shadow-lg bg-body rounded border border-secondary\">\r\n                <div className=\"p-7\">\r\n                    <h3 className=\"p-3 mb-2 bg-secondary text-white\">Ingreso</h3>\r\n                    <form onSubmit={ handleLogin } className=\"px-3\">\r\n                        <div className=\"form-group pt-4\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group pt-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group pt-5 pb-3\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Nav, Button, Badge } from 'react-bootstrap';\r\nimport React from 'react'\r\n//import { useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\n\r\nexport const Dates = () => {\r\n\r\n    //const {firstName, lastName, rol} = useSelector(state => state.auth);\r\n\r\n    const firstName = localStorage.getItem('firstName');\r\n    const lastName = localStorage.getItem('lastName');\r\n    const rol = localStorage.getItem('rol');\r\n\r\n    return (\r\n        <>\r\n            <span className=\"navbar-brand\">\r\n                {firstName+' '+lastName} <Badge pill bg=\"success\">{rol}</Badge>{' '}\r\n\r\n            </span>\r\n            \r\n            <Nav className=\"me-auto\">\r\n                <Nav.Link href=\"/Fronted-React-js/dashboard\">Dashboard</Nav.Link>\r\n                <Nav.Link href=\"/Fronted-React-js/hotel\">Hoteles</Nav.Link>\r\n                <Nav.Link href=\"/Fronted-React-js/country\">Paises</Nav.Link>\r\n                <Nav.Link href=\"/Fronted-React-js/register\"> Usuario Nuevo</Nav.Link>\r\n            </Nav>\r\n            <Button onClick={startLogout()}>\r\n                <i className=\"fas fa-sign-out-alt\"></i> \r\n                <span> salir</span>\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Navbar, Button } from 'react-bootstrap';\r\n\r\nexport const LoginBotton = () => {\r\n    return (\r\n        <Navbar.Brand href=\"\">\r\n            <Button variant=\"secondary\" href=\"/Fronted-React-js/login\">Login</Button>\r\n            {'  '}\r\n            <Button variant=\"info\" href=\"/Fronted-React-js/register\">Registrarse</Button>\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModalHotel = () => ({ type: types.uiOpenModalHotel });\nexport const uiOpenModalHotelId = (hotel) => ({ type: types.uiOpenModalHotelId,hotelUpdate:hotel });\nexport const uiOpenModalCountryId = (country) => ({ type: types.uiOpenModalCountryId,countryUpdate:country });\nexport const uiOpenModalCountry = () => ({ type: types.uiOpenModalCountry });\nexport const uiOpenModalDelete = (id) => ({ type: types.uiModalDelete, idDelete:id });\nexport const uiCloseModalDelete = () => ({ type: types.uiModalDeleteClose });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModalHotel,uiOpenModalCountry } from '../../actions/ui';\r\n\r\nexport const AddNewResource = ({tipo}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( (tipo==='hotel')?uiOpenModalHotel():uiOpenModalCountry());\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <button className=\"btn btn-success\" onClick={()=>{handleClickNew()}}>Agregar {(tipo==='hotel')?\"Hotel\":\"País\"}</button>\r\n        // {/*  this.modalInsertar() */}\r\n    )\r\n}","import { fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport Swal from 'sweetalert2'\n\nexport const eventLoadingHotel = () =>{\n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken('hotel?PageNumber=1&PageSize=19',{});\n            const body = await resp.json();\n\n            dispatch(eventHotelGet(body));\n            \n\n        } catch (error) {\n            console.log(error);\n        }\n\n    \n    }\n} \nexport const eventLoadingCountry = () =>{\n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken('country?PageNumber=1&PageSize=19',{});\n            const body = await resp.json();\n            console.log(body);\n            dispatch(eventCountryGet(body));\n            \n\n        } catch (error) {\n            console.log(error);\n        }\n\n    \n    }\n} \nexport const eventAddNewHotel = (event)=>{\n    \n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken('hotel',event,'Post');\n            console.log(resp);\n            if(resp.ok){\n                dispatch(eventPostHotel(event));\n                Swal.fire(\n                'Exitosa!',\n                'Se agregó correctamente!',\n                'success'\n            )}else{\n                Swal.fire(\n                'Error!',\n                'No se puede agregar!',\n                'error'\n                );\n            }\n            dispatch(closeModal());\n\n        } catch (error) {\n            console.log(error);\n        }\n    }   \n}\nexport const eventAddNewCountry = (event)=>{\n    \n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken('country',event,'Post');\n            console.log(resp);\n            if(resp.ok){\n                dispatch(eventPostCountry(event));\n                Swal.fire(\n                'Exitosa!',\n                'Se agregó correctamente!',\n                'success'\n            )\n            }else{\n                Swal.fire(\n                'Error!',\n                'No se puede agregar!',\n                'error'\n                );\n            }\n            dispatch(closeModal());\n\n        } catch (error) {\n            console.log(error);\n        }\n    }   \n}\nexport const eventDeleteHotel = (event)=>{\n    \n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken('hotel/'+event,{},'Delete');\n            \n            if(resp.ok){\n                dispatch(eventDeletedHotel(event));\n                Swal.fire(\n                'Exitosa!',\n                'Se eliminó correctamente!',\n                'success'\n              )}else{\n              Swal.fire(\n                'Error!',\n                'No se puede eliminar!',\n                'error'\n              );\n              }\n\n            dispatch(closeModalDelete());\n\n\n\n        } catch (error) {\n            console.log(error);\n        }\n    }   \n}\nexport const eventDeleteCountry = (id)=>{\n    \n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken('country/'+id,{},'Delete');\n            if(resp.ok){\n                dispatch(eventDeletedCountry(id));\n                Swal.fire(\n                'Exitosa!',\n                'Se eliminó correctamente!',\n                'success'\n              )}else{\n              Swal.fire(\n                'Error!',\n                'No se puede eliminar!',\n                'error'\n              );\n              }\n\n            dispatch(closeModalDelete());\n\n\n        } catch (error) {\n            console.log(error);\n        }\n    }   \n}\nexport const eventUpdateHotel = (event)=>{\n    \n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken('hotel/'+event.id,event,'PUT');\n            if(resp.ok){\n                dispatch(eventUpdatedHotel(event));\n                Swal.fire(\n                'Exitosa!',\n                'Se modificó correctamente!',\n                'success'\n              )}else{\n              Swal.fire(\n                'Error!',\n                'No se puede modificar!',\n                'error'\n              );\n              }\n            \n            dispatch(closeModal());\n\n        } catch (error) {\n            console.log(error);\n        }\n    }   \n}\nexport const eventUpdateCountry = (event)=>{\n    \n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken('country/'+event.id,event,'PUT');\n            if(resp.ok){\n                dispatch(eventUpdatedCountry(event));\n                Swal.fire(\n                'Exitosa!',\n                'Se modificó correctamente!',\n                'success'\n              )}else{\n              Swal.fire(\n                'Error!',\n                'No se puede modificar!',\n                'error'\n              );\n              }\n            dispatch(eventUpdatedCountry());\n            dispatch(closeModal());\n\n        } catch (error) {\n            console.log(error);\n        }\n    }   \n}\nconst closeModalDelete = ()=> ({   type: types.uiModalDeleteClose });\n\nconst closeModal = ()=> ({ type: types.uiCloseModal});\n\nconst eventPostHotel = (event)=> ({ type: types.eventAddHotel, payload: event});\nconst eventPostCountry = (event)=> ({ type: types.eventAddCountry, payload: event });\n\nconst eventHotelGet = (event)=>{\n    return{type: types.eventHotelGet,\n        payload: event}\n} \nconst eventCountryGet = (event)=>{\n    return{type: types.eventCountryGet,\n        payload: event}\n} \n\n\n\nconst eventDeletedHotel = (id) => ({ type: types.eventDeletedHotel, payload:id });\n\nconst eventDeletedCountry = (id) => ({ type: types.eventDeletedCountry, payload:id});\n\nconst eventUpdatedHotel = (event) => ({ type: types.eventUpdatedHotel, payload:event });\nconst eventUpdatedCountry = (event) => ({ type: types.eventUpdatedCountry, payload:event});\n\nexport const evenModaltDeleted = () => ({ type: types.modalDelete });\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const eventLogout =() => ({ type: types.eventLogout });\n","import React from 'react'\r\nimport { Stack,Button,Card,Spinner } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModalDelete,uiOpenModalCountryId } from '../../actions/ui';\r\n\r\n\r\nexport const CountryItem = (props) => {\r\n    const dispatch = useDispatch();\r\n    const Update = (guid)=>(dispatch(uiOpenModalCountryId(guid))); \r\n    const Delete = (guid)=>(dispatch(uiOpenModalDelete(guid))); \r\n\r\n    if (props.id==='') {\r\n        return (<Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>);\r\n    }\r\n    \r\n    return (\r\n       \r\n        <Card \r\n        bg='Primary'\r\n        key={props.id}\r\n        text='dark'\r\n        style={{ width: '12rem', height:'12rem' }} \r\n        className=\"mb-2 card animate__animated animate__bounce shadow p-3 mb-5 bg-body rounded border border-secondary\"\r\n        >\r\n        <Card.Body>\r\n            <Card.Title>{props.name}</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">{props.shortName}</Card.Subtitle>\r\n            <Stack gap={2} className=\"col-md-8 mx-auto\">\r\n                <Button size=\"sm\" onClick={()=>Update(props)}>editar</Button>\r\n                <Button variant=\"danger\" size=\"sm\" onClick={()=>Delete(props.id)}>eliminar</Button>\r\n            </Stack>\r\n        </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\nimport { eventAddNewCountry, eventUpdateCountry, eventDeleteCountry } from '../../actions/events';\r\nimport { uiCloseModal, uiCloseModalDelete } from '../../actions/ui';\r\n\r\n\r\n\r\n\r\nexport const ResourceModalCountry = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { modalOpenCountry,countrySelector, modalNew, modalDelete,idSelector } = useSelector(state => state.ui);\r\n  const { countries } = useSelector( state => state.country );\r\n  \r\n  const [FormValues, setFormValues] = useState(countries);\r\n  const { id, name, shortName}  = FormValues||{};\r\n  console.log(countrySelector);\r\n  useEffect(() => {\r\n    setFormValues(FormValues);\r\n    setFormValues( countrySelector );\r\n\r\n  }, [ countrySelector]);\r\n\r\n  \r\n    \r\n  const closeModal = () => {\r\n    // TODO: cerrar el modal\r\n    dispatch( uiCloseModal() );\r\n    dispatch(uiCloseModalDelete());\r\n    setFormValues( countries );\r\n  }\r\n      \r\n    \r\n  const handleChange=({target})=>{\r\n    setFormValues({\r\n      ...FormValues,\r\n      [target.name]: target.value\r\n  });\r\n  }\r\n  const countryDelete = ()=>{\r\n    dispatch(eventDeleteCountry(idSelector));\r\n  }\r\n\r\n  const handleSubmitForm= async(e)=>{\r\n    e.preventDefault();\r\n     if(modalNew){\r\n      delete FormValues.id; \r\n      dispatch(await eventAddNewCountry(FormValues));\r\n      \r\n    }else{\r\n      dispatch(await eventUpdateCountry(FormValues));\r\n    }\r\n\r\n  }\r\n\r\n    \r\n  return (\r\n    \r\n  <>\r\n    <Modal  isOpen={modalOpenCountry}\r\n            centered={true}\r\n            onRequestClose={ closeModal }>\r\n      <ModalHeader style={{display: 'block'}}>\r\n        <span  onClick={()=>handleSubmitForm()}> { (modalNew)?'Nuevo evento':'Editar evento'}</span>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nombre\">id</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"id\" id=\"id\" readOnly onChange={handleChange} value={id}/>\r\n          <br />\r\n          <label htmlFor=\"nombre\">Nombre</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" onChange={handleChange} value={name}/>\r\n          <br />\r\n          <label htmlFor=\"nombre\">Indicativo</label>\r\n          <input className=\"form-control\" type=\"text\" name=\"shortName\" id=\"shortName\" onChange={handleChange} value={shortName}/>\r\n          <br />\r\n        </div>\r\n      </ModalBody>\r\n\r\n      <ModalFooter>\r\n        {modalNew?\r\n          <button className=\"btn btn-success\" onClick={handleSubmitForm}>\r\n          Insertar\r\n        </button>: <button className=\"btn btn-primary\"onClick={handleSubmitForm} >\r\n          Actualizar\r\n        </button>\r\n        }\r\n        <button className=\"btn btn-danger\"onClick={()=>closeModal()} >Cancelar</button>\r\n      </ModalFooter>\r\n    </Modal>\r\n\r\n    <Modal isOpen={modalDelete}>\r\n      <ModalBody>\r\n          Estás seguro que deseas eliminar el país {name}\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <button className=\"btn btn-danger\" onClick={()=>countryDelete()}>Sí</button>\r\n        <button className=\"btn btn-secundary\" onClick={()=>closeModal()}>No</button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  </>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { AddNewResource } from '../ui/AddNewResource';\r\nimport { eventLoadingCountry } from '../../actions/events';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CountryItem } from './CountryItem';\r\nimport { ResourceModalCountry } from '../modal/ResourceModalCountry';\r\n\r\n\r\n\r\n\r\n\r\nexport const CountryScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const {countries} = useSelector(state => state.country)||{};\r\n    \r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n        dispatch(eventLoadingCountry());\r\n    \r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <h2>Paises</h2>\r\n            <AddNewResource  tipo=\"Country\"/>\r\n            <ResourceModalCountry/>\r\n            <div className=\"card-grid\">\r\n                {\r\n                    countries.map( (hot) =>(\r\n                        <CountryItem\r\n                            key={hot.id}\r\n                            {...hot}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n                        \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ResourceModalCountry } from '../modal/ResourceModalCountry';\r\nimport './dashboard.css';\r\n\r\n\r\nexport const Dashboard = () => {\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <ResourceModalCountry/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Stack, Button, Card, Badge, Spinner, Tooltip,Image, OverlayTrigger } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModalDelete,uiOpenModalHotelId } from '../../actions/ui';\r\n\r\n//{id, country, name, address, rating, countryId}\r\n\r\nexport const HotelItem = (props) => {\r\n    const dispatch = useDispatch();\r\n    const Update = (guid)=>(dispatch(uiOpenModalHotelId(guid))); \r\n    const Delete = (guid)=>(dispatch(uiOpenModalDelete(guid))); \r\n\r\n    if (props.id==='') {\r\n        return (<Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>);\r\n    }\r\n\r\n    \r\n    return (\r\n       \r\n        <Card \r\n        bg='Primary'\r\n        key={props.id}\r\n        text='dark'\r\n        style={{ width: '18rem' }} \r\n        className=\"mb-2 card animate__animated animate__bounce shadow p-3 mb-5 bg-body rounded\"\r\n        >\r\n        <Card.Body>\r\n            <Card.Title>{props.name}</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">{props.address}</Card.Subtitle>\r\n            <Card.Text className=\"mb-2 text-muted\">\r\n            Rating:<Badge pill bg=\"info\">{props.rating} </Badge>\r\n            </Card.Text>\r\n            <OverlayTrigger\r\n                placement=\"bottom\"\r\n                overlay={<Tooltip id=\"button-tooltip-2\">Revisar datos del hotel</Tooltip>}\r\n            >\r\n                {({ ref, ...triggerHandler }) => (\r\n                <Button\r\n                    variant=\"light\"\r\n                    {...triggerHandler}\r\n                    className=\"d-inline-flex align-items-center\"\r\n                >\r\n                    <Image\r\n                    ref={ref}\r\n                    roundedCircle\r\n                    src=\"holder.js/20x20?text=J&bg=28a745&fg=FFF\"\r\n                    />\r\n                    <span className=\"ms-1\">Saber mas...</span>\r\n                </Button>\r\n                )}\r\n  </OverlayTrigger>\r\n            <Stack gap={2} className=\"col-md-8 mx-auto\">\r\n                <Button size=\"sm\" onClick={()=>Update(props)}>editar</Button>\r\n                <Button variant=\"danger\" size=\"sm\" onClick={()=>Delete(props.id)}>eliminar</Button>\r\n            </Stack>\r\n        </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","import React,{useEffect, useState} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\nimport { eventAddNewHotel, eventDeleteHotel,eventClearActiveEvent,eventUpdateHotel } from '../../actions/events';\r\nimport { uiCloseModal, uiCloseModalDelete } from '../../actions/ui';\r\n\r\n\r\nexport const ResourceModalHotel = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { modalOpenHotel, modalDelete, modalNew, idSelector,hotelSelector } = useSelector(state => state.ui);\r\n  const {hotels} = useSelector(state => state.hotel)\r\n\r\n  const [formValues, setFormValues] = useState(hotels);\r\n  const {id, name,address,rating,countryId} = formValues;\r\n  \r\n  useEffect(() => {\r\n\r\n      setFormValues( hotels );\r\n      setFormValues( hotelSelector );\r\n\r\n}, [ setFormValues, modalOpenHotel, hotels,hotelSelector])\r\n    \r\n  \r\n  const closeModal = () => {\r\n    // TODO: cerrar el modal\r\n    dispatch( uiCloseModal() );\r\n    dispatch( eventClearActiveEvent() );\r\n    //setFormValues( initialState );\r\n}\r\n  const modalDeleteCancel = () => {\r\n\r\n    dispatch( uiCloseModalDelete() );\r\n\r\n  }\r\n  const hotelDelete = ()=>{\r\n    dispatch(eventDeleteHotel(idSelector));\r\n  }\r\n      const handleChange=({target})=>{\r\n        setFormValues({\r\n          ...formValues,\r\n          [target.name]: target.value\r\n      });\r\n      }\r\n\r\n      const handleSubmitForm= async(e)=>{\r\n        e.preventDefault();\r\n        dispatch( (modalNew)?await eventAddNewHotel({...formValues}):await eventUpdateHotel({...formValues}));\r\n      }\r\n   \r\n        \r\n      return (\r\n        \r\n        < >\r\n\r\n            <Modal  isOpen={modalOpenHotel}\r\n                    centered={true}\r\n                    onRequestClose={ closeModal }>\r\n                    <ModalHeader style={{display: 'block'}}>\r\n                      <span  onClick={()=>handleSubmitForm()}>nuevo</span>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"nombre\">id</label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"id\" id=\"id\" readOnly onChange={handleChange} value={id}/>\r\n                        <br />\r\n                        <label htmlFor=\"nombre\">Nombre</label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" onChange={handleChange} value={name}/>\r\n                        <br />\r\n                        <label htmlFor=\"nombre\">Dirección</label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"address\" id=\"address\" onChange={handleChange} value={address}/>\r\n                        <br />\r\n                        <label htmlFor=\"nombre\">Estrellas</label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"rating\" id=\"rating\" onChange={handleChange} value={rating}/>\r\n                        <br />\r\n                        <label htmlFor=\"nombre\">countryId</label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"countryId\" id=\"countryId\" onChange={handleChange} value={countryId}/>\r\n                        <br />\r\n                      </div>\r\n                    </ModalBody>\r\n    \r\n                    <ModalFooter>\r\n                      {modalNew?\r\n                        <button className=\"btn btn-success\" onClick={handleSubmitForm} >\r\n                        Insertar\r\n                      </button>: <button className=\"btn btn-primary\" onClick={handleSubmitForm}>\r\n                        Actualizar\r\n                      </button>\r\n                      }\r\n                      <button className=\"btn btn-danger\"onClick={()=>closeModal()} >Cancelar</button>\r\n                  </ModalFooter>\r\n              </Modal>\r\n    \r\n              <Modal isOpen={modalDelete}>\r\n                <ModalBody>\r\n                   Estás seguro que deseas eliminar el hotel {name}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                  <button className=\"btn btn-danger\" onClick={()=>hotelDelete()}>Sí</button>\r\n                  <button className=\"btn btn-secundary\" onClick={()=>modalDeleteCancel({modalDelete: false})}>No</button>\r\n                </ModalFooter>\r\n              </Modal>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { AddNewResource } from '../ui/AddNewResource';\r\nimport { eventLoadingHotel } from '../../actions/events';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { HotelItem } from './HotelItem';\r\nimport { ResourceModalHotel } from '../modal/ResourceModalHotel';\r\n\r\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n//import { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nexport const HotelScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const {hotels} = useSelector(state => state.hotel)\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n        dispatch(eventLoadingHotel());\r\n    \r\n    }, [dispatch]);\r\n\r\n\r\n\r\n    //const hotels = JSON.parse(localStorage.getItem('Hotels'));\r\n\r\n    return (\r\n        <>\r\n            <h2>Hotel</h2>\r\n            <AddNewResource  tipo=\"hotel\"/>\r\n            <ResourceModalHotel/>\r\n            <div className=\"card-grid\">\r\n                {\r\n                    hotels.map( (hot) =>(\r\n                        <HotelItem\r\n                            key={hot.id}\r\n                            {...hot}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n                        \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n\n    return (\n        \n        <Route { ...rest }\n            component={ (props) => (( isAuthenticated )\n                    ? ( <Redirect to=\"/Fronted-React-js/login\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport {  startRegister } from '../../actions/auth';\r\nimport './register.css';\r\n\r\nexport const RegisterScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const initialState={\r\n        email: '',\r\n        firstName:'',\r\n        lastName:'',\r\n        rol:'',\r\n        password: ''\r\n\r\n    }\r\n    const [ formRegisterValues, handleLoginInputChange, reset ] = useForm(initialState);\r\n\r\n    const { email, firstName, lastName,rol,password } = formRegisterValues;\r\n\r\n    const rolle=((localStorage.getItem('rol')===\"Administrator\"))||(\"visually-hidden\");\r\n\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( startRegister( email, firstName, lastName, rol, password ) );\r\n        reset();\r\n        return (<Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </Spinner>);\r\n    }\r\n    \r\n\r\n    \r\n    return (\r\n        <div className=\"register\">\r\n            <div className=\"position-absolute w-50  top-55 start-50 translate-middle border border-dark d-grid gap-3 shadow-lg bg-body rounded\"  >\r\n                <div className=\"\">\r\n                    <h3 className=\"p-4 bg-secondary text-white \">Nuevo usuario</h3>\r\n                    <form onSubmit={ handleLogin } className=\"row p-3 g-3 needs-validation\">\r\n                        <div className=\"input-group has-validation mt-3 mb-2\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control bg-light border\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"email\"\r\n                                id=\"validationCustom01\"\r\n                                value={ email }\r\n                                onChange={ handleLoginInputChange }\r\n                                aria-describedby=\"validationCustomUsername\"\r\n                                required\r\n                            />\r\n                            <div class=\"invalid-feedback\">\r\n                                Please choose a username.\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group mt-4\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control bg-light border\"\r\n                                placeholder=\"Nombres\"\r\n                                name=\"firstName\"\r\n                                value={ firstName }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mt-4\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control bg-light border\"\r\n                                placeholder=\"Apellidos\"\r\n                                name=\"lastName\"\r\n                                value={ lastName }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className={`input-group mb-3 mt-4 ${rolle}`} >\r\n                        <label className=\"input-group-text\" >Rol</label>\r\n                        <select className=\"form-select\" name=\"rol\" defaultValue={ rol } onChange={ handleLoginInputChange }  required aria-label=\"select example\">\r\n                            <option >roles...</option>\r\n                            <option defaultValue=\"user\">usuario</option>\r\n                            <option defaultValue=\"Administrator\">Administrador</option>\r\n\r\n                        </select>\r\n                        <div class=\"invalid-feedback\">Example invalid select feedback</div>\r\n                        </div>\r\n                        <div className=\"form-group mt-4\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control bg-light border\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"password\"\r\n                                value={ password }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\" pt-4 w-50  \">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\" btn btn-success\" \r\n                                value=\"Crear usuario\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <>\n            <Route { ...rest }\n                component={ (props) => (\n                    ( isAuthenticated )\n                        ? ( <Component { ...props } /> )\n                        : ( <Redirect to=\"/Fronted-React-js/dashboard\" /> )\n                )}\n            \n            />\n            \n        </>\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React,{useEffect} from 'react'\r\nimport { BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n    } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navbar, Container } from 'react-bootstrap';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { Dates } from '../components/ui/Dates';\r\nimport { useJwt } from \"react-jwt\";\r\nimport { LoginBotton } from '../components/ui/LoginBotton';\r\nimport { CountryScreen } from '../components/country/CountryScreen';\r\nimport { Dashboard } from '../components/dashboard/Dashboard';\r\nimport { HotelScreen } from '../components/hotel/HotelScreen';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { RegisterScreen } from '../components/user/RegisterScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\n\r\nexport const AppRouters = () => {\r\n    const dispatch = useDispatch();\r\n    const {checking} = useSelector(state => state.auth);\r\n    \r\n    const token = localStorage.getItem('token')||'';\r\n    const {  isExpired } = useJwt(token);\r\n    localStorage.setItem('tokenExpired', isExpired);\r\n    \r\n    useEffect(() => {\r\n         //dispatch(startChecking());\r\n    }, [!isExpired,checking]);\r\n\r\n    return (\r\n    <>\r\n\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n            <Navbar.Brand href=\"/Fronted-React-js\">\r\n                <img\r\n                    src=\"https://www.shareicon.net/data/512x512/2016/07/10/119874_apps_512x512.png\"\r\n                    width=\"50\"\r\n                    height=\"50\"\r\n                    className=\"d-inline-block align-top\"\r\n                    alt=\"React Bootstrap logo\"\r\n                />\r\n            Hotels\r\n            </Navbar.Brand>\r\n            \r\n            \r\n             {(isExpired)?<LoginBotton/>:<Dates />} \r\n            \r\n        </Container>\r\n  </Navbar>\r\n  \r\n    <Router>\r\n   \r\n        <Switch>\r\n            <Route path=\"/Fronted-React-js/register\" component={ RegisterScreen } />\r\n\r\n            <PrivateRoute \r\n                exact \r\n                path=\"/Fronted-React-js/login\" \r\n                component={ LoginScreen }\r\n                isAuthenticated={ isExpired }\r\n \r\n            /> \r\n\r\n            <PublicRoute \r\n                exact \r\n                path=\"/Fronted-React-js/dashboard\" \r\n                component={ Dashboard }\r\n                isAuthenticated={ isExpired }\r\n \r\n            />\r\n            \r\n\r\n            <Route path=\"/Fronted-React-js/dashboard\" render={()=>{\r\n                return (isExpired)?<Dashboard/>:<LoginScreen/>;\r\n            }\r\n            }/>\r\n            <Route path=\"/Fronted-React-js/hotel\" render={()=>{\r\n                return (isExpired)?<HotelScreen/>:<LoginScreen/>;\r\n            }\r\n            }/>\r\n            <Route path=\"/Fronted-React-js/country\" render={()=>{\r\n                return (isExpired)?<CountryScreen/>:<LoginScreen/>;\r\n            }\r\n            }/>\r\n\r\n\r\n        </Switch> \r\n        \r\n    </Router>\r\n  </>  \r\n  );\r\n}    \r\n       \r\n    \r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpenHotel: false,\r\n    modalOpenCountry: false,\r\n    modalDelete:false,\r\n    modalNew: true,\r\n    idSelector:null,\r\n    hotelSelector:{id:'',\r\n    country:'',\r\n    name:'',\r\n    address:'',\r\n    rating:'',\r\n    countryId:''},\r\n    countrySelector:{\r\n        id:'',\r\n        name:'',\r\n        shortName:''\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModalHotel:\r\n            return {\r\n                ...state,\r\n                modalNew:true,\r\n                modalOpenHotel: true\r\n            }\r\n        case types.uiOpenModalCountry:\r\n            return {\r\n                ...state,\r\n                modalNew:true,\r\n                modalOpenCountry: true\r\n            }\r\n        case types.uiOpenModalHotelId:\r\n            return {\r\n                ...state,\r\n                modalOpenHotel: true,\r\n                modalNew:false,\r\n                hotelSelector:action.hotelUpdate\r\n            }\r\n        case types.uiOpenModalCountryId:\r\n            return {\r\n                ...state,\r\n                modalOpenCountry: true,\r\n                modalNew:false,\r\n                countrySelector:action.countryUpdate\r\n            }\r\n            \r\n        case types.uiModalDelete:\r\n            return {\r\n                ...state,\r\n                modalDelete: true,\r\n                idSelector:action.idDelete\r\n            }\r\n        case types.uiModalDeleteClose:\r\n            return {\r\n                ...state,\r\n                modalDelete: false\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpenCountry: false,\r\n                modalOpenHotel:false,\r\n                hotelSelector: {id:'',\r\n                country:'',\r\n                name:'',\r\n                address:'',\r\n                rating:'',\r\n                countryId:''},\r\n                countrySelector:{id:'', name:'',shortName:''}\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                hotel: {id:'',\r\n                country:'',\r\n                name:'',\r\n                address:'',\r\n                rating:'',\r\n                countryId:''}\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","//import moment from 'moment';\r\n\r\nimport { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    countries: [{\r\n        id:'',\r\n        name:'',\r\n        shortName:''\r\n    }],\r\n    activeEvent: null\r\n};\r\n\r\n\r\nexport const countryReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.eventAddCountry:\r\n            return {\r\n                ...state,\r\n                countries:[\r\n                    ...state.countries,\r\n                     action.payload\r\n                ],\r\n                hola:'me ejecuto'\r\n            }\r\n        case types.eventCountryGet:\r\n            return {\r\n                ...state,\r\n                countries: action.payload                \r\n            }\r\n\r\n        case types.eventClearModal:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n\r\n        case types.eventUpdatedCountry:\r\n            return {\r\n                ...state,\r\n                countries: state.countries.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n        \r\n        case types.eventDeletedCountry:\r\n            return {\r\n                ...state,\r\n                countries: state.countries.filter(\r\n                    e=>(e.id !== action.payload )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n","import { types } from '../types/types';\n\nconst initialState = {\n    checking: false,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: true\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: true\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n\n        default:\n            return state;\n    }\n\n}\n\n\n","import { types } from '../types/types';\r\n\r\n   \r\n\r\n\r\nconst initialState = {\r\n    hotels: [{id:'',\r\n    country:'',\r\n    name:'',\r\n    address:'',\r\n    rating:'',\r\n    countryId:''}],\r\n    activeEvent: null\r\n};\r\n\r\n\r\nexport const hotelReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n\r\n        \r\n        case types.eventAddHotel:\r\n            return {\r\n                ...state,\r\n                hotels: [\r\n                    ...state.hotels,\r\n                    action.payload\r\n                ],\r\n                hola:'me ejecuto'\r\n            }\r\n\r\n        case types.eventHotelGet:\r\n            return {\r\n                ...state,\r\n                hotels: action.payload\r\n                \r\n            }\r\n\r\n\r\n\r\n        case types.eventUpdatedHotel:\r\n            return {\r\n                ...state,\r\n                hotels: state.hotels.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                ),\r\n                datos: action.payload.id\r\n            }\r\n        \r\n        case types.eventDeletedHotel:\r\n            return {\r\n                ...state,\r\n                hotels: state.hotels.filter(\r\n                    e => ( e.id !== action.payload )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { uiReducer } from './uiReducer';\r\nimport { countryReducer } from './countryReducer';\r\nimport { authReducer } from './authReducer';\r\nimport { hotelReducer } from './hotelReducer';\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    country: countryReducer,\r\n    hotel: hotelReducer,\r\n    auth: authReducer\r\n})\r\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","import React from 'react'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouters } from './routers/AppRouters'\r\nimport { store } from './store/store'\r\n\r\n\r\n\r\nexport const DashboardApp = () => {\r\n    \r\n    \r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouters />        \r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DashboardApp } from './DashboardApp';\nimport './index.css';\n\nReactDOM.render(\n  <DashboardApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}